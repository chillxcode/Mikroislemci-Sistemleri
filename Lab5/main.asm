;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Mon Dec 2019
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================
CODE    			SEGMENT PARA 'CODE'
					ASSUME CS:CODE, DS:DATA, SS:STAK
STAK    			SEGMENT PARA STACK 'STACK'
					DW 20 DUP(?)
STAK    			ENDS

DATA    			SEGMENT PARA 'DATA'
NUMBERS   			DB 3FH ,06H,5BH,4FH, 66H, 6DH, 7DH, 07H, 7FH, 67H, 77H, 7CH, 39H, 5BH, 79H, 71H
DATA    			ENDS

START PROC FAR
					MOV AX, DATA
					MOV DS, AX	

					;8255(PPI)==============================================
					PORTA 	 EQU 400H
					PORTB	 EQU 402H
					PORTC	 EQU 404H
					CW_8255	 EQU 406H
					
					;Programming 8255
					MOV AL, 80H  ;PortA->o/p, Mod0
					MOV DX, CW_8255
					OUT DX, AL
					;=======================================================
					
					;8253(Timer-Counter)====================================
					COUNTER0 EQU 000H
					COUNTER1 EQU 002H
					COUNTER2 EQU 004H
					CW_8253  EQU 006H
					
					;Programming 8253
					MOV AL, 00010101b;31H, Counter0, LSB, PULSE WAWE, BCD
					OUT CW_8253, AL
					MOV AL, 03H ;LSB
					OUT COUNTER0, AL
					;=======================================================
					
					
					;8259(Interrupt-Handler)================================
					OCW1	 EQU 200H
					OCW2     EQU 202H
					OCW3     EQU 202H
					
					
					XOR AX, AX
					MOV ES, AX
	
					;first interrupt for timer
					MOV AL, 40H
					MOV AH, 4
					MUL AH
	
					MOV BX, AX
					LEA AX, NEWINT
					MOV WORD PTR ES:[BX], AX
					MOV AX, CS
					MOV WORD PTR ES:[BX+2], AX 
					
					;
					XOR AX, AX
					MOV AL, 08H
					MOV BX, AX
					LEA AX, NEWINT
					MOV WORD PTR ES:[BX], AX
					MOV AX, CS
					MOV WORD PTR ES:[BX+2], AX 

	

					MOV AL, 13H
					MOV DX, OCW1
					OUT DX, AL
					
					MOV AL, 40H
					MOV DX, OCW2
					OUT DX, AL
					
					MOV AL, 03H
					MOV DX, OCW3
					OUT DX, AL
					STI
					;=======================================================
					
					
					XOR AX, AX
					
ENDLESS:			CMP AX, 15
					JBE CONTINUE
					MOV AX, 0
					
CONTINUE:		
					CALL DISPLAY_7SEG
					JMP ENDLESS
	
RETF
START 				ENDP


NEWINT  			PROC NEAR
					PUSH BP
					MOV BP,SP
					
					INC AX      
					POP BP
					IRET
NEWINT 				ENDP


DISPLAY_7SEG    	PROC NEAR 
					PUSH AX
					
					MOV DX, PORTA
					MOV SI, AX
					
			
					MOV AL, NUMBERS[SI]
					OUT DX, AL
					
					
					POP AX
					CALL WAIT_A_LITTLE
					RET
DISPLAY_7SEG		ENDP



WAIT_A_LITTLE PROC NEAR
			  PUSH CX
			  MOV CX, 1000H
			  LOOP1: 
			  NOP
			  LOOP LOOP1
		      POP CX
RET
WAIT_A_LITTLE ENDP	
	

	
CODE    			ENDS
					END START